@model StackOverflowProject.ViewModels.EditUserPasswordViewModel
@{
    ViewBag.Title = "ChangePassword";
}

<div class="row">
    <div class="col-sm-12">
        <h2>Change Password</h2>
        <form novalidate="novalidate" action="/account/changepassword" method="post" class="needs-validation">
            @Html.AntiForgeryToken()
            <div class="form-row">

                <div class="form-group col-sm-12">
                    <label for="txtEmail">Email</label>
                    @Html.HiddenFor(temp => temp.Email)
                    <span class="form-text">@Model.Email</span>
                </div>

                <div class="form-group col-sm-6">
                    <label for="txtPassword">Password</label>
                    <input type="password" class="form-control" id="txtPassword" placeholder="Password" name="Password"
                           required="required" minlength="6" oninput="form.ConfirmPassword.pattern = escapeRegExp(this.value)" />
                    <div class="valid-feedback">
                        Looks good
                    </div>
                    <div class="invalid-feedback">
                        Password must contain at least 6 characters
                    </div>
                </div>

                <div class="form-group col-sm-6">
                    <label for="txtPassword">Confirm Password</label>
                    <input type="password" class="form-control" id="txtConfirmPassword" placeholder="Confirm Password" name="ConfirmPassword"
                           required="required" />
                    <div class="valid-feedback">
                        Looks good
                    </div>
                    <div class="invalid-feedback">
                        Password and Confirm Password do not Match
                    </div>
                </div>

            </div>
            <button type="submit" class="btn btn-primary">Change Password</button>
        </form>
    </div>
</div>

<script>

    $(document).on("submit", ".needs-validation", validate);

    $(".needs-validation input").blur(validate);

    function validate(event)
    {
        if ($(".needs-validation")[0].checkValidity() == false)
        {
            event.preventDefault();
        }
        $(".needs-validation")[0].classList.add("was-validated");
    }  

    function escapeRegExp(str) {
        return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
    }

</script>


